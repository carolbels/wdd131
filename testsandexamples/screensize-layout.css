/* Source: https://web.dev/articles/responsive-web-design-basics#how_to_choose_breakpoints 

FLEXBOX

Use Flexbox when you have a set of items of different sizes and you want them to fit comfortably in a row or multiple rows, 
with smaller items taking up less space and larger ones taking more space.

You can use Flexbox to display items as a single row, or wrapped onto multiple rows as the available space decreases.
*/

.items {
    display: flex;
    justify-content: space-between;
}

/* 

CSS GRID

CSS Grid Layout creates flexible grids. You can improve the earlier floated example using use grid layout and the fr unit, 
which represents a portion of the available space in the container.

You can also use Grid Layout to create regular grid layouts with as many items as can fit. 
The number of available tracks is reduced as the screen size decreases.
*/

.container {
    display: grid;
    grid-template-columns: 1fr 3fr;
}

/* 

MULTIPLE-COLUMN LAYOUT

For some types of layout, you can use Multiple-column Layout (Multicol), which creates responsive numbers of columns with the column-width property. 

*/

/* Copyright 2018 Google LLC.
SPDX-License-Identifier: Apache-2.0 */

/* CSS files add styling rules to your content 

body {
    font-family: "Benton Sans", "Helvetica Neue", helvetica, arial, sans-serif;
    margin: 2em;
}
  
.container {
    : 200px;
    column-rule: 1px solid rgba(255, 255, 255, 0.3);
    column-gap: 2em;
    margin: 0 auto;
    max-width: 960px;
    color: #ccc;
    background-color: rgba(0, 0, 0, 0.9);
    border-radius: 4px;
    padding: 10px;
}
*/